{
  "unpublishedCollection": {
    "name": "SELECT_DATA",
    "pageId": "Page2",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tmyVar2: {},\n\tget_Live_data:()=>{\n\tlet datatemp = [];\n\tfor (let i=0; i<GET_DATA.data.length; i++)\n\t{                                        \n\t\t\tif(GET_DATA.data[i].REMARK==\"LIVE DATA\" && GET_DATA.data[i].ACTIVE==true)\n\t\t\t{\n\t\t\t\tdatatemp.push(GET_DATA.data[i]);\n\t\t\t}\n\t}\n\treturn datatemp;\n\t},\n\tget_Live:()=>{\n\tlet data=[];\n\tfor (let i=0; i<GET_DATA.data.length; i++)\n\t{                                        \n\t\t\tif(GET_DATA.data[i].REMARK==\"LIVE DATA\" && GET_DATA.data[i].ACTIVE==true)\n\t\t\t{\n\t\t\t\tdata.push(GET_DATA.data[i]);\n\t\t\t}\n\t}\n\treturn data;\n\t},\n\tget_RNR_data:()=>{\n\tlet data=[];\n\tfor (let i=0; i<GET_RNR.data.length; i++)\n\t{                                        \n\t\t\tif(GET_RNR.data[i].REMARK==\"RNR\" && GET_RNR.data[i].ACTIVE==true)\n\t\t\t{\n\t\t\t\tdata.push(GET_RNR.data[i]);\n\t\t\t}\n\t}\n\treturn data;\n\t},\n\tget_CB_data:()=>{\n\tlet data=[];\n\tfor (let i=0; i<GET_DATA.data.length; i++)\n\t{\t\n\t\tif((GET_DATA.data[i].SCHEDULE_DATE)<=DATE.date_format())\n\t\t{\n\t\t\tif(GET_DATA.data[i].REMARK==\"CALL BACK\" && GET_DATA.data[i].ACTIVE==true)\n\t\t\t{\n\t\t\t\tdata.push(GET_DATA.data[i]);\n\t\t\t}\n\t\t}\n\t}\n\t\tdata.sort((a,b)=>{\n\t\t\treturn ((b.SCHEDULE_DATE)-(a.SCHEDULE_DATE))\n\t\t})\n\treturn data;\n},\n\tget_Followups_data:()=>{\n\tlet data=[];\n\tfor (let i=0; i<GET_DATA.data.length; i++)\n\t{\n\t\tif(GET_DATA.data[i].REMARK==\"INTERESTED\" || GET_DATA.data[i].REMARK==\"RNR\" || GET_DATA.data[i].REMARK==\"SWITCH OFF/NOT REACHBLE\" && GET_DATA.data[i].ACTIVE==true)\n\t\t{\n\t\t\tdata.push(GET_DATA.data[i]);\n\t\t}\n\t}\n\treturn data;\n},\n\tgetCallerData: () => {\n\t\tlet callerData=[];\n\t\tfor (let i= (GET_CALLERDATA.data.length-1); i>=0;i--)\n\t\t{\n\t\t\t\tif(GET_CALLERDATA.data[i].STATUS!=\"\")\n\t\t\t\t{\n\t\t\t\t\tcallerData.push(GET_CALLERDATA.data[i])\n\t\t\t\t}\n\t\t}\n\t\treturn callerData\n\t},\n\tget_Old_leads : ()=>{\n\t\tlet Old_data=[];\n\t\tif(GET_OLD_LEADS.data )\n\tfor (let i=0; i<GET_OLD_LEADS.data.length; i++)\n\t{                                        \n\t\t\tif(GET_OLD_LEADS.data[i].REMARK==\"OLD LEADS\")\n\t\t\t{\n\t\t\t\tOld_data.push(GET_OLD_LEADS.data[i]);\n\t\t\t}\n\t}\n\treturn Old_data;\n\t},\n\tget_Demo_leads : ()=>{\n\t\tlet demo_data=[];\n\t\tif(GET_DEMO_LEADS.data && GET_DEMO_LEADS.data.length > 0){\n\t\t\tfor (let i=0; i<GET_DEMO_LEADS.data.length; i++)\n\t{                                        \n\t\t\tif(GET_DEMO_LEADS.data[i].REMARK==\"DEMO REQUEST\")\n\t\t\t{\n\t\t\t\tdemo_data.push(GET_DEMO_LEADS.data[i]);\n\t\t\t}\n\t}\n\t\t}\n\treturn demo_data;\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t}\n}",
    "variables": [
      {
        "name": "myVar1",
        "value": "[]"
      },
      {
        "name": "myVar2",
        "value": "{}"
      }
    ],
    "userPermissions": []
  },
  "id": "Page2_SELECT_DATA",
  "deleted": false,
  "gitSyncId": "63242e5fd54cbb52f19abc01_635cdddc2a523703d95f32dd"
}