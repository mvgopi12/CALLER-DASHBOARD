{
  "unpublishedCollection": {
    "name": "DAILY_REPORT",
    "pageId": "Page1",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tmyVar1: [],\n\tmyVar2: {}, \n\tCallback_count: () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"CALL BACK\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tRNR_count: () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"RNR\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tINTERESTED_count : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"INTERESTED\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tNOTINTERESTED_count : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"NOT INTERESTED\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tDemo_count : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"DEMO REQUEST\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\t\tInstall_count : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"INSTALL REQUEST\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tSR_count : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"SWITCH OFF/NOT REACHBLE\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\tCDisc_count : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"CUSTOMER DISCONNECTING\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\t\tWNum_count : () =>{\n\t\tlet count = 0;\n\t\tfor(let i = (GET_LOGS_DATA.data.length-1); i>=0;i--){\n\t\t\tif(GET_LOGS_DATA.data[i].REMARKS == \"WRONG NUM\"){\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count\n\t},\n\ttotal : ()=>{\n\t\tlet count = 0;\n\t\tcount = DAILY_REPORT.Callback_count()+ DAILY_REPORT.Demo_count() + DAILY_REPORT.Install_count() + DAILY_REPORT.INTERESTED_count() + DAILY_REPORT.NOTINTERESTED_count() + DAILY_REPORT.RNR_count() + DAILY_REPORT.SR_count() + DAILY_REPORT.WNum_count() + DAILY_REPORT.CDisc_count();\n\t\treturn count;\n\t},\n\t\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t}\n}",
    "variables": [
      {
        "name": "myVar1",
        "value": "[]"
      },
      {
        "name": "myVar2",
        "value": "{}"
      }
    ]
  },
  "id": "Page1_DAILY_REPORT",
  "deleted": false,
  "gitSyncId": "63242e5fd54cbb52f19abc01_6327f9821051120e7b5b688c"
}